#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'todo'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/todo` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/todo now"
  exit 64
end

include GLI::App

program_desc 'Simple command line to do application'

version Todo::VERSION

desc 'File containing our to do items'
default_value 'todos.txt'
arg_name 'filename'
flag [:f,:file]

desc 'Add a new to do item to your list'
arg_name '"My to-do item"'
command :new do |c|
  c.desc 'Place this item at the top of your to do list.'
  c.switch [:f, :first]
  
  c.desc 'Assign priority'
  c.default_value 1
  c.arg_name 'priority (integer)'
  c.flag [:p, :priority]
  
  c.action do |global_options,options,args|
    # Your command logic here
    # If you have any errors, just raise them
    # raise "that command made no sense"

    puts "new command ran"
  end
end

desc 'List your to do items'
arg_name 'List items sorted by <sort>'
command :list do |c|
  c.desc 'Sort by name or priority'
  c.default_value 'priority'
  c.arg_name 'sort_key'
  c.flag [:s, :sort]

  c.action do |global_options,options,args|
    puts "list command ran"
  end
end

desc 'Mark this item as done.'
arg_name 'Number of the item you want to mark as done.'
command :done do |c|
  c.action do |global_options,options,args|
    puts "done command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abourt and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
